name: Migrate GitHub Secrets
'on':
  workflow_dispatch: {}
jobs:
  migrate-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Migrate Secrets to Target Repository
        uses: actions/github-script@v6
        env:
          TARGET_REPO: lotfi-a/ft_custom_printf
          REPO_ACCESS_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          SOURCE_SECRET: ${{ secrets.SOURCE_SECRET }}
        with:
          github-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          script: |-
            const targetRepo = process.env.TARGET_REPO;
            const [targetOwner, targetRepoName] = targetRepo.split('/');

            const secrets = {
              REPO_ACCESS_TOKEN: process.env.REPO_ACCESS_TOKEN,
              SOURCE_SECRET: process.env.SOURCE_SECRET,
            };

            for (const [name, value] of Object.entries(secrets)) {
              console.log(`Creating secret: \");

              // Get the public key of the target repo
              const { data: publicKeyData } = await github.rest.actions.getRepoPublicKey({
                owner: targetOwner,
                repo: targetRepoName
              });

              // The GitHub API requires secrets to be encrypted with the repo's public key
              const sodium = require('tweetsodium');

              // Convert the secret value and key to Uint8Array
              const messageBytes = Buffer.from(value);
              const keyBytes = Buffer.from(publicKeyData.key, 'base64');

              // Encrypt using libsodium
              const encryptedBytes = sodium.seal(messageBytes, keyBytes);
              const encrypted = Buffer.from(encryptedBytes).toString('base64');

              // Create or update the secret in the target repo
              await github.rest.actions.createOrUpdateRepoSecret({
                owner: targetOwner,
                repo: targetRepoName,
                secret_name: name,
                encrypted_value: encrypted,
                key_id: publicKeyData.key_id
              });
            }

            console.log('Secret migration completed successfully!');
